import os
import urllib
from contextlib import asynccontextmanager
import uvicorn
from fastapi import FastAPI
from nsfw_detector import predict
from tensorflow import keras

from src.config import settings
from src.database.database import  drop_all_tables
from src.geo.core import seed_all
from src.routers import register_routers


@asynccontextmanager
async def lifespan(app: FastAPI):
    settings.config_cloudinary()
    h5_path = "ai-models/nsfw_model.h5"
    saved_model_path = "ai-models/nsfw_model_finetuned.h5"

    # üîß 1. –°–∫–∞—á–∏–≤–∞–µ–º .h5, –µ—Å–ª–∏ –µ–≥–æ –Ω–µ—Ç
    if not os.path.exists(h5_path):
        print("üì• –°–∫–∞—á–∏–≤–∞—é NSFW-–º–æ–¥–µ–ª—å...")
        os.makedirs(os.path.dirname(h5_path), exist_ok=True)
        url = "https://s3.amazonaws.com/nsfwdetector/nsfw.299x299.h5"
        urllib.request.urlretrieve(url, h5_path)
        print("‚úÖ –ú–æ–¥–µ–ª—å —Å–∫–∞—á–∞–Ω–∞")

    # üîÅ 2. –ö–æ–Ω–≤–µ—Ä—Ç–∏—Ä—É–µ–º –≤ SavedModel, –µ—Å–ª–∏ –µ—â—ë –Ω–µ –∫–æ–Ω–≤–µ—Ä—Ç–∏—Ä–æ–≤–∞–Ω–∞
    if not os.path.exists(saved_model_path):
        print("üîÑ –ö–æ–Ω–≤–µ—Ä—Ç–∞—Ü–∏—è .h5 ‚Üí SavedModel...")
        keras_model = keras.models.load_model(h5_path)
        keras_model.save(saved_model_path)
        print("‚úÖ SavedModel –≥–æ—Ç–æ–≤")

    # üöÄ 3. –ó–∞–≥—Ä—É–∂–∞–µ–º –º–æ–¥–µ–ª—å –≤ FastAPI
    app.state.nsfw_model = predict.load_model(saved_model_path)
    # await seed_all()
    # await drop_all_tables()
    # print("–ë–∞–∑–∞ –æ—á–∏—â–µ–Ω–∞")
    yield


app = FastAPI(lifespan=lifespan)

register_routers(app)


if __name__ == "__main__":

    uvicorn.run("src.main:app", host="127.0.0.1", port=8000)


